{"ast":null,"code":"import _objectSpread from\"C:/Users/Jaire/Desktop/PROJECTS/2025/payroll_calculators/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import'../styles/TimeCalculator.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TimeCalculator(_ref){let{days}=_ref;const[times,setTimes]=useState(days.map(()=>({in1:\"\",out1:\"\",in2:\"\",out2:\"\",in3:\"\",out3:\"\"})));const roundToNearestQuarter=time=>{if(!time)return\"\";//takes care of empty or invalid inputs\nconst[hours,minutes]=time.split(\":\").map(Number);//grabs the hours and minutes splitting by :\nconst roundedMinutes=Math.round(minutes/15)*15;//rounds minutes to nearest 15 minutes\n// adjusting for edge cases, 60 min becomes 0 min plus 1 hour\nconst adjustedHours=roundedMinutes===60?hours+1:hours;const finalMinutes=roundedMinutes===60?0:roundedMinutes;// ensure 2 digit format\nconst formattedHours=String(adjustedHours).padStart(2,\"0\");const formattedMinutes=String(finalMinutes).padStart(2,\"0\");return\"\".concat(formattedHours,\":\").concat(formattedMinutes);};const handleInputChange=(dayIndex,field,value)=>{const updatedTimes=[...times];updatedTimes[dayIndex][field]=value;setTimes(updatedTimes);};const calculateTotalHours=day=>{const parseTime=time=>{if(!time)return 0;const[hours,minutes]=time.split(\":\").map(Number);return hours+minutes/60;};const workPeriods=[[day.in1,day.out1],[day.in2,day.out2],[day.in3,day.out3]];let totalHours=0;workPeriods.forEach(_ref2=>{let[start,end]=_ref2;const startTime=parseTime(start);const endTime=parseTime(end);if(startTime&&endTime&&endTime>startTime){totalHours+=endTime-startTime;}});return totalHours.toFixed(2);};const calculateWeeklyTotal=()=>{return times.reduce((total,day,index)=>{const roundedRow={in1:roundToNearestQuarter(day.in1),out1:roundToNearestQuarter(day.out1),in2:roundToNearestQuarter(day.in2),out2:roundToNearestQuarter(day.out2),in3:roundToNearestQuarter(day.in3),out3:roundToNearestQuarter(day.out3)};return total+parseFloat(calculateTotalHours(roundedRow));},0);};const clearTable=()=>{setTimes(days.map(()=>({in1:\"\",out1:\"\",in2:\"\",out2:\"\",in3:\"\",out3:\"\"})));};const standardTime=()=>{const updatedTimes=times.map((time,index)=>{if(days[index]!==\"Saturday\"&&days[index]!==\"Sunday\"){return _objectSpread(_objectSpread({},time),{},{in1:\"07:00\",out1:\"11:00\",in2:\"12:00\",out2:\"16:00\",in3:\"\",out3:\"\"});}return time;});setTimes(updatedTimes);};return/*#__PURE__*/_jsxs(\"div\",{className:\"table-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timetracker-buttons\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Clears the table of all times.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearTable,children:\"Clear the Table\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Standard Time for all weekdays except Saturday and Sunday.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:standardTime,children:\"Standard Time\"})]}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Weekday\"}),/*#__PURE__*/_jsx(\"th\",{children:\"In\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Out\"}),/*#__PURE__*/_jsx(\"th\",{children:\"In\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Out\"}),/*#__PURE__*/_jsx(\"th\",{children:\"In\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Out\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Totals\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:days.map((day,index)=>{const roundedRow={in1:roundToNearestQuarter(times[index].in1),out1:roundToNearestQuarter(times[index].out1),in2:roundToNearestQuarter(times[index].in2),out2:roundToNearestQuarter(times[index].out2),in3:roundToNearestQuarter(times[index].in3),out3:roundToNearestQuarter(times[index].out3)};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:day}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:times[index].in1,onChange:e=>handleInputChange(index,\"in1\",e.target.value)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:times[index].out1,onChange:e=>handleInputChange(index,\"out1\",e.target.value)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:times[index].in2,onChange:e=>handleInputChange(index,\"in2\",e.target.value)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:times[index].out2,onChange:e=>handleInputChange(index,\"out2\",e.target.value)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:times[index].in3,onChange:e=>handleInputChange(index,\"in3\",e.target.value)})}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"time\",value:times[index].out3,onChange:e=>handleInputChange(index,\"out3\",e.target.value)})}),/*#__PURE__*/_jsxs(\"td\",{children:[calculateTotalHours(times[index]),\" hrs\"]})]}),/*#__PURE__*/_jsxs(\"tr\",{className:\"rounded-row\",children:[/*#__PURE__*/_jsx(\"td\",{children:\"Rounded\"}),/*#__PURE__*/_jsx(\"td\",{children:roundedRow.in1||\"-\"}),/*#__PURE__*/_jsx(\"td\",{children:roundedRow.out1||\"-\"}),/*#__PURE__*/_jsx(\"td\",{children:roundedRow.in2||\"-\"}),/*#__PURE__*/_jsx(\"td\",{children:roundedRow.out2||\"-\"}),/*#__PURE__*/_jsx(\"td\",{children:roundedRow.in3||\"-\"}),/*#__PURE__*/_jsx(\"td\",{children:roundedRow.out3||\"-\"}),/*#__PURE__*/_jsxs(\"td\",{children:[calculateTotalHours(roundedRow),\" hrs\"]})]})]},index);})}),/*#__PURE__*/_jsx(\"tfoot\",{children:/*#__PURE__*/_jsxs(\"tr\",{className:\"weekly-total\",children:[/*#__PURE__*/_jsx(\"td\",{children:\"Weekly Total:\"}),/*#__PURE__*/_jsxs(\"td\",{children:[calculateWeeklyTotal().toFixed(2),\" hrs \"]})]})})]})]});}export default TimeCalculator;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","TimeCalculator","_ref","days","times","setTimes","map","in1","out1","in2","out2","in3","out3","roundToNearestQuarter","time","hours","minutes","split","Number","roundedMinutes","Math","round","adjustedHours","finalMinutes","formattedHours","String","padStart","formattedMinutes","concat","handleInputChange","dayIndex","field","value","updatedTimes","calculateTotalHours","day","parseTime","workPeriods","totalHours","forEach","_ref2","start","end","startTime","endTime","toFixed","calculateWeeklyTotal","reduce","total","index","roundedRow","parseFloat","clearTable","standardTime","_objectSpread","className","children","onClick","Fragment","type","onChange","e","target"],"sources":["C:/Users/Jaire/Desktop/PROJECTS/2025/payroll_calculators/src/components/TimeCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/TimeCalculator.css';\r\n\r\nfunction TimeCalculator({ days }) {\r\n    const [times, setTimes] = useState(\r\n      days.map(() => ({ in1: \"\", out1: \"\", in2: \"\", out2: \"\", in3: \"\", out3: \"\" }))\r\n    );\r\n  \r\n    const roundToNearestQuarter = (time) => {\r\n      if (!time) return \"\"; //takes care of empty or invalid inputs\r\n      const [hours, minutes] = time.split(\":\").map(Number); //grabs the hours and minutes splitting by :\r\n  \r\n      const roundedMinutes = Math.round(minutes / 15) * 15; //rounds minutes to nearest 15 minutes\r\n\r\n      // adjusting for edge cases, 60 min becomes 0 min plus 1 hour\r\n      const adjustedHours = roundedMinutes === 60 ? hours + 1 : hours;\r\n      const finalMinutes = roundedMinutes === 60 ? 0 : roundedMinutes;\r\n\r\n      // ensure 2 digit format\r\n      const formattedHours = String(adjustedHours).padStart(2, \"0\");\r\n      const formattedMinutes = String(finalMinutes).padStart(2, \"0\");\r\n  \r\n      return `${formattedHours}:${formattedMinutes}`;\r\n    };\r\n  \r\n    const handleInputChange = (dayIndex, field, value) => {\r\n      const updatedTimes = [...times];\r\n      updatedTimes[dayIndex][field] = value;\r\n      setTimes(updatedTimes);\r\n    };\r\n  \r\n    const calculateTotalHours = (day) => {\r\n      const parseTime = (time) => {\r\n        if (!time) return 0;\r\n        const [hours, minutes] = time.split(\":\").map(Number);\r\n        return hours + minutes / 60;\r\n      };\r\n  \r\n      const workPeriods = [\r\n        [day.in1, day.out1],\r\n        [day.in2, day.out2],\r\n        [day.in3, day.out3],\r\n      ];\r\n  \r\n      let totalHours = 0;\r\n      workPeriods.forEach(([start, end]) => {\r\n        const startTime = parseTime(start);\r\n        const endTime = parseTime(end);\r\n        if (startTime && endTime && endTime > startTime) {\r\n          totalHours += endTime - startTime;\r\n        }\r\n      });\r\n  \r\n      return totalHours.toFixed(2);\r\n    };\r\n\r\n    const calculateWeeklyTotal = () => {\r\n        return times.reduce((total, day, index) => {\r\n          const roundedRow = {\r\n            in1: roundToNearestQuarter(day.in1),\r\n            out1: roundToNearestQuarter(day.out1),\r\n            in2: roundToNearestQuarter(day.in2),\r\n            out2: roundToNearestQuarter(day.out2),\r\n            in3: roundToNearestQuarter(day.in3),\r\n            out3: roundToNearestQuarter(day.out3),\r\n          };\r\n      \r\n          return total + parseFloat(calculateTotalHours(roundedRow));\r\n        }, 0);\r\n      };\r\n\r\n    const clearTable = () => {\r\n        setTimes(\r\n          days.map(() => ({ in1: \"\", out1: \"\", in2: \"\", out2: \"\", in3: \"\", out3: \"\" }))\r\n        );\r\n      };\r\n    \r\n      const standardTime = () => {\r\n        const updatedTimes = times.map((time, index) => {\r\n          if (days[index] !== \"Saturday\" && days[index] !== \"Sunday\") {\r\n            return { ...time, in1: \"07:00\",out1: \"11:00\",in2: \"12:00\",out2: \"16:00\",in3: \"\",out3: \"\" };\r\n          }\r\n          return time;\r\n        });\r\n        setTimes(updatedTimes);\r\n      };\r\n  \r\n    return (\r\n      <div className=\"table-container\">\r\n        <div className=\"timetracker-buttons\">\r\n          <p>Clears the table of all times.</p>\r\n          <button onClick={clearTable}>Clear the Table</button>\r\n          <p>Standard Time for all weekdays except Saturday and Sunday.</p>\r\n          <button onClick={standardTime}>Standard Time</button>\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Weekday</th>\r\n              <th>In</th>\r\n              <th>Out</th>\r\n              <th>In</th>\r\n              <th>Out</th>\r\n              <th>In</th>\r\n              <th>Out</th>\r\n              <th>Totals</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {days.map((day, index) => {\r\n              const roundedRow = {\r\n                in1: roundToNearestQuarter(times[index].in1),\r\n                out1: roundToNearestQuarter(times[index].out1),\r\n                in2: roundToNearestQuarter(times[index].in2),\r\n                out2: roundToNearestQuarter(times[index].out2),\r\n                in3: roundToNearestQuarter(times[index].in3),\r\n                out3: roundToNearestQuarter(times[index].out3),\r\n              };\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  {/* Original Row */}\r\n                  <tr>\r\n                    <td>{day}</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].in1}\r\n                        onChange={(e) => handleInputChange(index, \"in1\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].out1}\r\n                        onChange={(e) => handleInputChange(index, \"out1\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].in2}\r\n                        onChange={(e) => handleInputChange(index, \"in2\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].out2}\r\n                        onChange={(e) => handleInputChange(index, \"out2\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].in3}\r\n                        onChange={(e) => handleInputChange(index, \"in3\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].out3}\r\n                        onChange={(e) => handleInputChange(index, \"out3\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      {calculateTotalHours(times[index])} hrs\r\n                    </td>\r\n                  </tr>\r\n  \r\n                  {/* Rounded Row */}\r\n                  <tr className=\"rounded-row\">\r\n                    <td>Rounded</td>\r\n                    <td>{roundedRow.in1 || \"-\"}</td>\r\n                    <td>{roundedRow.out1 || \"-\"}</td>\r\n                    <td>{roundedRow.in2 || \"-\"}</td>\r\n                    <td>{roundedRow.out2 || \"-\"}</td>\r\n                    <td>{roundedRow.in3 || \"-\"}</td>\r\n                    <td>{roundedRow.out3 || \"-\"}</td>\r\n                    <td>{calculateTotalHours(roundedRow)} hrs</td>\r\n                  </tr>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr className='weekly-total'>\r\n                <td>Weekly Total:</td>\r\n                <td>{calculateWeeklyTotal().toFixed(2)} hrs </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default TimeCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}