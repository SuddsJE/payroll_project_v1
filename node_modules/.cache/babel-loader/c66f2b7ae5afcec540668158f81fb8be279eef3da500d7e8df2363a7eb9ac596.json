{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TrsCalculator(){const[inputDate,setInputDate]=useState(\"\");const[resultDate,setResultDate]=useState(\"\");const calculateDate=()=>{if(!inputDate){setResultDate(\"Please enter a valid date.\");return;}const startDate=new Date(inputDate);// Convert the input date\nconst dateAfter90Days=new Date(startDate);dateAfter90Days.setDate(dateAfter90Days.getDate()+90);// Add 90 days\nconst lastDayOfMonth=new Date(dateAfter90Days.getFullYear(),dateAfter90Days.getMonth()+1,0);// Get the last day of the month\nsetResultDate(lastDayOfMonth.toDateString());// Format the result\n};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"date\",value:inputDate,onChange:e=>setInputDate(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:calculateDate,children:\"Calculate\"}),resultDate&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Result:\"}),/*#__PURE__*/_jsx(\"p\",{children:resultDate})]})]});}export default TrsCalculator;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","TrsCalculator","inputDate","setInputDate","resultDate","setResultDate","calculateDate","startDate","Date","dateAfter90Days","setDate","getDate","lastDayOfMonth","getFullYear","getMonth","toDateString","children","type","value","onChange","e","target","onClick"],"sources":["C:/Users/Jaire/Desktop/PROJECTS/2025/payroll_calculators/src/components/TrsCalculator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TrsCalculator() {\r\n  const [inputDate, setInputDate] = useState(\"\");\r\n  const [resultDate, setResultDate] = useState(\"\");\r\n\r\n  const calculateDate = () => {\r\n    if (!inputDate) {\r\n      setResultDate(\"Please enter a valid date.\");\r\n      return;\r\n    }\r\n\r\n    const startDate = new Date(inputDate); // Convert the input date\r\n    const dateAfter90Days = new Date(startDate);\r\n    dateAfter90Days.setDate(dateAfter90Days.getDate() + 90); // Add 90 days\r\n\r\n    const lastDayOfMonth = new Date(\r\n      dateAfter90Days.getFullYear(),\r\n      dateAfter90Days.getMonth() + 1,\r\n      0\r\n    ); // Get the last day of the month\r\n\r\n    setResultDate(lastDayOfMonth.toDateString()); // Format the result\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"date\"\r\n        value={inputDate}\r\n        onChange={(e) => setInputDate(e.target.value)}\r\n      />\r\n      <button onClick={calculateDate}>Calculate</button>\r\n      {resultDate && (\r\n        <div>\r\n          <h2>Result:</h2>\r\n          <p>{resultDate}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrsCalculator;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,QAAS,CAAAC,aAAaA,CAAA,CAAG,CACvB,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGP,QAAQ,CAAC,EAAE,CAAC,CAC9C,KAAM,CAACQ,UAAU,CAAEC,aAAa,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAEhD,KAAM,CAAAU,aAAa,CAAGA,CAAA,GAAM,CAC1B,GAAI,CAACJ,SAAS,CAAE,CACdG,aAAa,CAAC,4BAA4B,CAAC,CAC3C,OACF,CAEA,KAAM,CAAAE,SAAS,CAAG,GAAI,CAAAC,IAAI,CAACN,SAAS,CAAC,CAAE;AACvC,KAAM,CAAAO,eAAe,CAAG,GAAI,CAAAD,IAAI,CAACD,SAAS,CAAC,CAC3CE,eAAe,CAACC,OAAO,CAACD,eAAe,CAACE,OAAO,CAAC,CAAC,CAAG,EAAE,CAAC,CAAE;AAEzD,KAAM,CAAAC,cAAc,CAAG,GAAI,CAAAJ,IAAI,CAC7BC,eAAe,CAACI,WAAW,CAAC,CAAC,CAC7BJ,eAAe,CAACK,QAAQ,CAAC,CAAC,CAAG,CAAC,CAC9B,CACF,CAAC,CAAE;AAEHT,aAAa,CAACO,cAAc,CAACG,YAAY,CAAC,CAAC,CAAC,CAAE;AAChD,CAAC,CAED,mBACEf,KAAA,QAAAgB,QAAA,eACElB,IAAA,UACEmB,IAAI,CAAC,MAAM,CACXC,KAAK,CAAEhB,SAAU,CACjBiB,QAAQ,CAAGC,CAAC,EAAKjB,YAAY,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC/C,CAAC,cACFpB,IAAA,WAAQwB,OAAO,CAAEhB,aAAc,CAAAU,QAAA,CAAC,WAAS,CAAQ,CAAC,CACjDZ,UAAU,eACTJ,KAAA,QAAAgB,QAAA,eACElB,IAAA,OAAAkB,QAAA,CAAI,SAAO,CAAI,CAAC,cAChBlB,IAAA,MAAAkB,QAAA,CAAIZ,UAAU,CAAI,CAAC,EAChB,CACN,EACE,CAAC,CAEV,CAEA,cAAe,CAAAH,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}