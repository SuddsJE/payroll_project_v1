{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaire\\\\Desktop\\\\PROJECTS\\\\2025\\\\payroll_calculators\\\\src\\\\components\\\\TimeCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/TimeCalculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimeCalculator({\n  days\n}) {\n  _s();\n  const [times, setTimes] = useState(days.map(() => ({\n    in1: \"\",\n    out1: \"\",\n    in2: \"\",\n    out2: \"\",\n    in3: \"\",\n    out3: \"\"\n  })));\n  const roundToNearestQuarter = time => {\n    if (!time) return \"\"; //takes care of empty or invalid inputs\n    const [hours, minutes] = time.split(\":\").map(Number); //grabs the hours and minutes splitting by :\n\n    const roundedMinutes = Math.round(minutes / 15) * 15; //rounds minutes to nearest 15 minutes\n\n    // adjusting for edge cases, 60 min becomes 0 min plus 1 hour\n    const adjustedHours = roundedMinutes === 60 ? hours + 1 : hours;\n    const finalMinutes = roundedMinutes === 60 ? 0 : roundedMinutes;\n\n    // ensure 2 digit format\n    const formattedHours = String(adjustedHours).padStart(2, \"0\");\n    const formattedMinutes = String(finalMinutes).padStart(2, \"0\");\n    return `${formattedHours}:${formattedMinutes}`;\n  };\n  const handleInputChange = (dayIndex, field, value) => {\n    const updatedTimes = [...times];\n    updatedTimes[dayIndex][field] = value;\n    setTimes(updatedTimes);\n  };\n  const calculateTotalHours = day => {\n    const parseTime = time => {\n      if (!time) return 0;\n      const [hours, minutes] = time.split(\":\").map(Number);\n      return hours + minutes / 60;\n    };\n    const workPeriods = [[day.in1, day.out1], [day.in2, day.out2], [day.in3, day.out3]];\n    let totalHours = 0;\n    workPeriods.forEach(([start, end]) => {\n      const startTime = parseTime(start);\n      const endTime = parseTime(end);\n      if (startTime && endTime && endTime > startTime) {\n        totalHours += endTime - startTime;\n      }\n    });\n    return totalHours.toFixed(2);\n  };\n  const calculateWeeklyTotal = () => {\n    return times.reduce((total, day, index) => {\n      const roundedRow = {\n        in1: roundToNearestQuarter(day.in1),\n        out1: roundToNearestQuarter(day.out1),\n        in2: roundToNearestQuarter(day.in2),\n        out2: roundToNearestQuarter(day.out2),\n        in3: roundToNearestQuarter(day.in3),\n        out3: roundToNearestQuarter(day.out3)\n      };\n      return total + parseFloat(calculateTotalHours(roundedRow));\n    }, 0);\n  };\n  const clearTable = () => {\n    setTimes(days.map(() => ({\n      in1: \"\",\n      out1: \"\",\n      in2: \"\",\n      out2: \"\",\n      in3: \"\",\n      out3: \"\"\n    })));\n  };\n  const standardTime = () => {\n    const updatedTimes = times.map((time, index) => {\n      if (days[index] !== \"Saturday\" && days[index] !== \"Sunday\") {\n        return {\n          ...time,\n          in1: \"07:00\",\n          out1: \"15:00\",\n          in2: \"15:30\",\n          out2: \"23:30\",\n          in3: \"\",\n          out3: \"\"\n        };\n      }\n      return time;\n    });\n    setTimes(updatedTimes);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timetracker-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearTable,\n        children: \"Clear the Table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: standardTime,\n        children: \"Standard Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Weekday\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Totals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: days.map((day, index) => {\n          const roundedRow = {\n            in1: roundToNearestQuarter(times[index].in1),\n            out1: roundToNearestQuarter(times[index].out1),\n            in2: roundToNearestQuarter(times[index].in2),\n            out2: roundToNearestQuarter(times[index].out2),\n            in3: roundToNearestQuarter(times[index].in3),\n            out3: roundToNearestQuarter(times[index].out3)\n          };\n          return /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: day\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: times[index].in1,\n                  onChange: e => handleInputChange(index, \"in1\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: times[index].out1,\n                  onChange: e => handleInputChange(index, \"out1\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: times[index].in2,\n                  onChange: e => handleInputChange(index, \"in2\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: times[index].out2,\n                  onChange: e => handleInputChange(index, \"out2\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: times[index].in3,\n                  onChange: e => handleInputChange(index, \"in3\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"time\",\n                  value: times[index].out3,\n                  onChange: e => handleInputChange(index, \"out3\", e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [calculateTotalHours(times[index]), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              className: \"rounded-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: \"Rounded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: roundedRow.in1 || \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: roundedRow.out1 || \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: roundedRow.in2 || \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: roundedRow.out2 || \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: roundedRow.in3 || \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: roundedRow.out3 || \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: [calculateTotalHours(roundedRow), \" hrs\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"weekly-total\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: \"Weekly Total:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [calculateWeeklyTotal().toFixed(2), \" hrs \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 7\n  }, this);\n}\n_s(TimeCalculator, \"r1O3cVHti6IMCMICKoE4SPvD3gI=\");\n_c = TimeCalculator;\nexport default TimeCalculator;\nvar _c;\n$RefreshReg$(_c, \"TimeCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TimeCalculator","days","_s","times","setTimes","map","in1","out1","in2","out2","in3","out3","roundToNearestQuarter","time","hours","minutes","split","Number","roundedMinutes","Math","round","adjustedHours","finalMinutes","formattedHours","String","padStart","formattedMinutes","handleInputChange","dayIndex","field","value","updatedTimes","calculateTotalHours","day","parseTime","workPeriods","totalHours","forEach","start","end","startTime","endTime","toFixed","calculateWeeklyTotal","reduce","total","index","roundedRow","parseFloat","clearTable","standardTime","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","type","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/Jaire/Desktop/PROJECTS/2025/payroll_calculators/src/components/TimeCalculator.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/TimeCalculator.css';\r\n\r\nfunction TimeCalculator({ days }) {\r\n    const [times, setTimes] = useState(\r\n      days.map(() => ({ in1: \"\", out1: \"\", in2: \"\", out2: \"\", in3: \"\", out3: \"\" }))\r\n    );\r\n  \r\n    const roundToNearestQuarter = (time) => {\r\n      if (!time) return \"\"; //takes care of empty or invalid inputs\r\n      const [hours, minutes] = time.split(\":\").map(Number); //grabs the hours and minutes splitting by :\r\n  \r\n      const roundedMinutes = Math.round(minutes / 15) * 15; //rounds minutes to nearest 15 minutes\r\n\r\n      // adjusting for edge cases, 60 min becomes 0 min plus 1 hour\r\n      const adjustedHours = roundedMinutes === 60 ? hours + 1 : hours;\r\n      const finalMinutes = roundedMinutes === 60 ? 0 : roundedMinutes;\r\n\r\n      // ensure 2 digit format\r\n      const formattedHours = String(adjustedHours).padStart(2, \"0\");\r\n      const formattedMinutes = String(finalMinutes).padStart(2, \"0\");\r\n  \r\n      return `${formattedHours}:${formattedMinutes}`;\r\n    };\r\n  \r\n    const handleInputChange = (dayIndex, field, value) => {\r\n      const updatedTimes = [...times];\r\n      updatedTimes[dayIndex][field] = value;\r\n      setTimes(updatedTimes);\r\n    };\r\n  \r\n    const calculateTotalHours = (day) => {\r\n      const parseTime = (time) => {\r\n        if (!time) return 0;\r\n        const [hours, minutes] = time.split(\":\").map(Number);\r\n        return hours + minutes / 60;\r\n      };\r\n  \r\n      const workPeriods = [\r\n        [day.in1, day.out1],\r\n        [day.in2, day.out2],\r\n        [day.in3, day.out3],\r\n      ];\r\n  \r\n      let totalHours = 0;\r\n      workPeriods.forEach(([start, end]) => {\r\n        const startTime = parseTime(start);\r\n        const endTime = parseTime(end);\r\n        if (startTime && endTime && endTime > startTime) {\r\n          totalHours += endTime - startTime;\r\n        }\r\n      });\r\n  \r\n      return totalHours.toFixed(2);\r\n    };\r\n\r\n    const calculateWeeklyTotal = () => {\r\n        return times.reduce((total, day, index) => {\r\n          const roundedRow = {\r\n            in1: roundToNearestQuarter(day.in1),\r\n            out1: roundToNearestQuarter(day.out1),\r\n            in2: roundToNearestQuarter(day.in2),\r\n            out2: roundToNearestQuarter(day.out2),\r\n            in3: roundToNearestQuarter(day.in3),\r\n            out3: roundToNearestQuarter(day.out3),\r\n          };\r\n      \r\n          return total + parseFloat(calculateTotalHours(roundedRow));\r\n        }, 0);\r\n      };\r\n\r\n    const clearTable = () => {\r\n        setTimes(\r\n          days.map(() => ({ in1: \"\", out1: \"\", in2: \"\", out2: \"\", in3: \"\", out3: \"\" }))\r\n        );\r\n      };\r\n    \r\n      const standardTime = () => {\r\n        const updatedTimes = times.map((time, index) => {\r\n          if (days[index] !== \"Saturday\" && days[index] !== \"Sunday\") {\r\n            return { ...time, in1: \"07:00\",out1: \"15:00\",in2: \"15:30\",out2: \"23:30\",in3: \"\",out3: \"\" };\r\n          }\r\n          return time;\r\n        });\r\n        setTimes(updatedTimes);\r\n      };\r\n  \r\n    return (\r\n      <div className=\"table-container\">\r\n        <div className=\"timetracker-buttons\">\r\n          <button onClick={clearTable}>Clear the Table</button>\r\n          <button onClick={standardTime}>Standard Time</button>\r\n        </div>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Weekday</th>\r\n              <th>In</th>\r\n              <th>Out</th>\r\n              <th>In</th>\r\n              <th>Out</th>\r\n              <th>In</th>\r\n              <th>Out</th>\r\n              <th>Totals</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {days.map((day, index) => {\r\n              const roundedRow = {\r\n                in1: roundToNearestQuarter(times[index].in1),\r\n                out1: roundToNearestQuarter(times[index].out1),\r\n                in2: roundToNearestQuarter(times[index].in2),\r\n                out2: roundToNearestQuarter(times[index].out2),\r\n                in3: roundToNearestQuarter(times[index].in3),\r\n                out3: roundToNearestQuarter(times[index].out3),\r\n              };\r\n              return (\r\n                <React.Fragment key={index}>\r\n                  {/* Original Row */}\r\n                  <tr>\r\n                    <td>{day}</td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].in1}\r\n                        onChange={(e) => handleInputChange(index, \"in1\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].out1}\r\n                        onChange={(e) => handleInputChange(index, \"out1\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].in2}\r\n                        onChange={(e) => handleInputChange(index, \"in2\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].out2}\r\n                        onChange={(e) => handleInputChange(index, \"out2\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].in3}\r\n                        onChange={(e) => handleInputChange(index, \"in3\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"time\"\r\n                        value={times[index].out3}\r\n                        onChange={(e) => handleInputChange(index, \"out3\", e.target.value)}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      {calculateTotalHours(times[index])} hrs\r\n                    </td>\r\n                  </tr>\r\n  \r\n                  {/* Rounded Row */}\r\n                  <tr className=\"rounded-row\">\r\n                    <td>Rounded</td>\r\n                    <td>{roundedRow.in1 || \"-\"}</td>\r\n                    <td>{roundedRow.out1 || \"-\"}</td>\r\n                    <td>{roundedRow.in2 || \"-\"}</td>\r\n                    <td>{roundedRow.out2 || \"-\"}</td>\r\n                    <td>{roundedRow.in3 || \"-\"}</td>\r\n                    <td>{roundedRow.out3 || \"-\"}</td>\r\n                    <td>{calculateTotalHours(roundedRow)} hrs</td>\r\n                  </tr>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </tbody>\r\n          <tfoot>\r\n            <tr className='weekly-total'>\r\n                <td>Weekly Total:</td>\r\n                <td>{calculateWeeklyTotal().toFixed(2)} hrs </td>\r\n            </tr>\r\n          </tfoot>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default TimeCalculator;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}