{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jaire\\\\Desktop\\\\PROJECTS\\\\2025\\\\payroll_calculators\\\\src\\\\components\\\\TrsCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrsCalculator() {\n  _s();\n  const [inputDate, setInputDate] = useState(\"\");\n  const [resultDate, setResultDate] = useState(\"\");\n  const calculateDate = () => {\n    if (!inputDate) {\n      setResultDate(\"Please enter a valid date.\");\n      return;\n    }\n    const startDate = new Date(inputDate); // Convert the input date\n    const dateAfter90Days = new Date(startDate);\n    dateAfter90Days.setDate(dateAfter90Days.getDate() + 90); // Add 90 days\n\n    const lastDayOfMonth = new Date(dateAfter90Days.getFullYear(), dateAfter90Days.getMonth() + 1, 0); // Get the last day of the month\n\n    setResultDate(lastDayOfMonth.toDateString()); // Format the result\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: inputDate,\n      onChange: e => setInputDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateDate,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), resultDate && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Result:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: resultDate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(TrsCalculator, \"gQFbNrdYLt76O1Wwpsxd9B/KVds=\");\n_c = TrsCalculator;\nexport default TrsCalculator;\nvar _c;\n$RefreshReg$(_c, \"TrsCalculator\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TrsCalculator","_s","inputDate","setInputDate","resultDate","setResultDate","calculateDate","startDate","Date","dateAfter90Days","setDate","getDate","lastDayOfMonth","getFullYear","getMonth","toDateString","children","type","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Jaire/Desktop/PROJECTS/2025/payroll_calculators/src/components/TrsCalculator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TrsCalculator() {\r\n  const [inputDate, setInputDate] = useState(\"\");\r\n  const [resultDate, setResultDate] = useState(\"\");\r\n\r\n  const calculateDate = () => {\r\n    if (!inputDate) {\r\n      setResultDate(\"Please enter a valid date.\");\r\n      return;\r\n    }\r\n\r\n    const startDate = new Date(inputDate); // Convert the input date\r\n    const dateAfter90Days = new Date(startDate);\r\n    dateAfter90Days.setDate(dateAfter90Days.getDate() + 90); // Add 90 days\r\n\r\n    const lastDayOfMonth = new Date(\r\n      dateAfter90Days.getFullYear(),\r\n      dateAfter90Days.getMonth() + 1,\r\n      0\r\n    ); // Get the last day of the month\r\n\r\n    setResultDate(lastDayOfMonth.toDateString()); // Format the result\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"date\"\r\n        value={inputDate}\r\n        onChange={(e) => setInputDate(e.target.value)}\r\n      />\r\n      <button onClick={calculateDate}>Calculate</button>\r\n      {resultDate && (\r\n        <div>\r\n          <h2>Result:</h2>\r\n          <p>{resultDate}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrsCalculator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMS,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACJ,SAAS,EAAE;MACdG,aAAa,CAAC,4BAA4B,CAAC;MAC3C;IACF;IAEA,MAAME,SAAS,GAAG,IAAIC,IAAI,CAACN,SAAS,CAAC,CAAC,CAAC;IACvC,MAAMO,eAAe,GAAG,IAAID,IAAI,CAACD,SAAS,CAAC;IAC3CE,eAAe,CAACC,OAAO,CAACD,eAAe,CAACE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;;IAEzD,MAAMC,cAAc,GAAG,IAAIJ,IAAI,CAC7BC,eAAe,CAACI,WAAW,CAAC,CAAC,EAC7BJ,eAAe,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,EAC9B,CACF,CAAC,CAAC,CAAC;;IAEHT,aAAa,CAACO,cAAc,CAACG,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;EAChD,CAAC;EAED,oBACEhB,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MACEkB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEhB,SAAU;MACjBiB,QAAQ,EAAGC,CAAC,IAAKjB,YAAY,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACF1B,OAAA;MAAQ2B,OAAO,EAAEpB,aAAc;MAAAU,QAAA,EAAC;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACjDrB,UAAU,iBACTL,OAAA;MAAAiB,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChB1B,OAAA;QAAAiB,QAAA,EAAIZ;MAAU;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChB,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACxB,EAAA,CAvCQD,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAyCtB,eAAeA,aAAa;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}